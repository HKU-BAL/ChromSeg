The crossing-partition algorithm extracts single chromosomes from the candidate crossing-overlap regions detected by the region-guided UNet++. First, the watershed algorithm  is used to divide the overlapping chromosomes in a crossing-overlap region into two groups: overlapping parts and non-overlapping parts (see stage 2 in Figure 3). The target of the crossing-partition algorithm is to group the parts from the two groups accurately to form individual chromosomes. As shown in Algorithm 1 (Function Build Dictionary), we identify the non-overlapping parts that are supposed to be connected with an overlapping part by searching in a small disk area of the overlapping part. The disk area is a dilation of the overlapping part. The disk area is set to contain the overlapping part and all of its authentic non-overlapping parts as much as possible. We set the dilation of the disk area at about 8 to 12 pixels. It is rare, if not impossible, for an overlapping part to belong to three or more chromosomes. In real-life applications, the problem is usually solved by using another metaphase cell image of the same cell taken at a different time, so our algorithm doesnt handle overlapping parts that consist of more than two chromosomes. That being said, each disk area of an overlapping part should contain no more than four adjacent non-overlapping parts that belong to exactly two chromosomes, forming shapes including the "X" shape, "T" shape and "L" shape. If we can properly pair up the non-overlapping parts, we can then use a union-find algorithm to efficiently assign the parts to individual chromosomes.

In order to properly pair-up the non-overlapping parts, we designed a heuristic algorithm. For each overlapping part and its non-overlapping parts, the algorithm first calculates the central coordinate of all the parts. Specifically, when calculating the central coordinate of the non-overlapping parts, the algorithm considers only the points within the disk area of the overlapping part it belongs to in order to avoid being affected by chromosomes with unexpected shapes or large curliness. Then a straight line is connected from each centre of the non-overlapping parts to the centre of the crossing-overlap part, and then extended past the centre (like emitting a ray from the non-overlapping parts to the overlapping part). If an extended straight line intersects with at least one non-overlapping part in the disk area, we conclude that the two parts belong to the same chromosome. Using this algorithm, we found that most of the complicated crossing-overlap chromosomes cases can be effectively segmented and reconstructed.

After grouping all non-overlapping parts, we obtained a forest based on the union-find algorithm. Then we traversed all trees in the forest and combined them with crossing-overlap parts to output all individual chromosomes.

We offer two image as example in our code. You can run python main.py to test it.